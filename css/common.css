/* common */
body {
  color : #333;
  font-family: 'Nanum Gothic', sans-serif;
  font-size : 16px;
  font-weight: 400;
  line-height: 1.4;
  height: 3000px;
}
/* img : display:block을 선언해서 baseline을 없애기위함 (밑에 살짝 튀어나온 부분) */
img {
  display: block;
}
a{
  text-decoration: none;
}
/* 모든 inner에 대한 정의 */
.inner {
  width : 1100px;
  margin : 0 auto;
  position : relative;
}
/* 우선순위 10점 */
.btn{
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  color: #333;
  font-size: 16px;
  font-weight: 700;
  text-align: center;
  cursor:pointer;
  box-sizing:border-box;
  display:block;
  transition:.4s;
}
.btn:hover { 
  background-color:#333;
  color:#fff;
}
/* 우선순위20점 */
.btn.btn--reverse {
  background-color: #333;
  color:#fff;
}
/* hover시 배경화면은 투명하게(원래로돌아가게) 
우선숨위 30점*/
.btn.btn--reverse:hover {
  background-color: transparent;
  color:#333;
}
.btn.btn--brown {
  color: #592B18;
  border-color: #592B18;
}
.btn.btn--brown:hover{
  color: #fff;
  background-color: #592B18;
}
.btn.btn--gold{
  color:#D9AA8A;
  border-color:#D9AA8A;
}
.btn.btn--gold:hover{
  color: #fff;
  background-color: #D9AA8A;
}
.btn.btn--white{
  color: #fff;
  border-color:#fff;
}
.btn.btn--white:hover{
  color: #333;
  background-color:#fff;
}
/* 투명한 상태 */
.back-to-position{
  opacity:0;
  transition: 1s;
}
/* 왼쪽 > 오른쪽 나타남 */
/* 원래상태로 돌아가는것 : 왼쪽 > 오른쪽 이동하는것 */
.back-to-position.to-right {
  transform : translateX(-150px);
}
/* 오른쪽 > 왼쪽 나타남 */
.back-to-position.to-left{
  transform : translateX(150px);
}
/* show 라는 클래스가 있어야 원래 상태로 다시돌아옴
translateX(0);  */
.show .back-to-position{
  opacity: 1;
  transform: translateX(0);
}
.show .back-to-position.delay-0{
  transition-delay:0s;
}
.show .back-to-position.delay-1{
  transition-delay:.3s;
}
.show .back-to-position.delay-2{
  transition-delay:.6s;
}
.show .back-to-position.delay-3{
  transition-delay:.9s;
}



/* header */
header {
  width : 100%;
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  /* position: relative;  fixed가 되면서 부모요소 또한 가능해짐*/
  /* position fixed 시 가로넓이를 최소화 하려고 함 */
  position: fixed;
  top: 0;
  z-index:9;

}

/* header의 자식요소인 inner만 120px 높이!  > = 자식선택자 */
header > .inner {
  height: 120px;
}

header .logo {
  height: 75px;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  margin: auto;
}

header .sub-menu{
  display:flex;
  position: absolute;
  top:10px;
  right:0;
}

header .sub-menu ul.menu {
  font-family: Arial, sans-serif;
  display : flex;
} 

header .sub-menu ul.menu li{
  position:relative;
}

/* position:absolute 의 부모요소는  li 태그이다 
  display: block은 absolute로인해 블록요소가 되었으므로 지워도 된다.*/
header .sub-menu ul.menu li::before{
  content : "";
  display: block;
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  top:0;
  bottom:0;
  margin: auto 0;
}

/* signin 앞쪽 구분선은 필요없으므로 fist-child로 입력해 삭제한다. */
header .sub-menu ul.menu li:first-child::before{
  display:none; 
}

/* a태그는 인라인요소이므로 display;block요소로 바꾸게하자 */
header .sub-menu ul.menu li a{
  font-size:  12px;
  padding: 11px 16px;
  display:block;
  color: #656565;
}

header .sub-menu ul.menu li a:hover{
  color: #000;
}

header .sub-menu .search{
  height:34px;
  position: relative;
}

header .sub-menu .search input{
  width:36px;
  height:34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  border-radius: 5px;
  outline:none;
  background-color: #fff;
  color: #777;
  font-size: 12px;
  transition: width .4s;
}

header .sub-menu .search input:focus{
  width: 190px;
  border-color: #669900 
}

/* height:24px은 material-icon의 font크기와 동일하게 해준다. */
header .sub-menu .search .material-icons{
  height: 24px;
  position: absolute;
  top:0;
  bottom: 0;
  right:5px;
  margin : auto 0;
  transition: .4s;
}

/* .search.focused는 같이 들어간 class 이므로 붙여서 명시해야한다. 
    일치 선택자임*/
header .sub-menu .search.focused .material-icons{
 opacity:0;
}

/* z-index : 맨오른쪽 광고배너보다 위에올려놓기 위함 */
header .main-menu {
  position:absolute;
  bottom:0;
  right:0;
  z-index: 1;
  display:flex;
}

/* header .main-menu .item {
  
} */

header .main-menu .item .item__name {
  padding : 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}

/* item__name 이름에 커서를대면 contents 또한 바뀌기 떄문에 item에 hover 효과를 넣어주어야 한다. */
header .main-menu .item:hover .item__name{
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0 0;
}


/* top이나 bottom 속성을 사용하지 않아 수직위치 값이 없다면 요소의 원래위치를 그대로 사용합니다 */
header .main-menu .item .item__contents {
  width : 100%;
  position : fixed;
  left:0;
  display: none;
}

header .main-menu .item:hover .item__contents {
  display:block;
}


header .main-menu .item .item__contents .contents__menu{
  background-color:  #2c2a29;
}

/* contents__menu안에 ul태그가 두개가 있으므로 자식만 콕집어서 특정바로 자식
만 명시해주기위해 */
header .main-menu .item .item__contents .contents__menu > ul{
  display: flex;
  padding : 20px 0;
}

header .main-menu .item .item__contents .contents__menu >ul > li{
  width: 220px;
}

header .main-menu .item .item__contents .contents__menu >ul > li h4 {
  padding : 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}

/* header .main-menu .item .item__contents .contents__menu >ul > li ul {

} */

header .main-menu .item .item__contents .contents__menu >ul > li ul li{
  padding : 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}

header .main-menu .item .item__contents .contents__menu >ul > li ul li:hover{
  color:#669900;
}

/* background-image 는기본값이 패턴 repeat이기때문에 명시를 안해주면 패턴이 반복된것처럼 보인다. */
header .main-menu .item .item__contents .contents__texture{
  background-image: url("../images/main_menu_pattern.jpg");
  padding: 26px 0;
  font-size: 12px;
  /* font-size는 상속되므로 아래 h4/p에 적용된다 */
}


header .main-menu .item .item__contents .contents__texture h4{
  color: #999;
  font-weight:700;

}
header .main-menu .item .item__contents .contents__texture p{
  color: #669900;
  margin : 4px 0 14px;

}

/* badges */

header .badges {
position : absolute;
top: 132px;
right: 12px;
}

header .badges .badge {
  overflow: hidden;
  border-radius: 10px;
  overflow:hidden;
  margin-bottom:10px;
  box-shadow: 4px 4px 10px rgba(0,0,0,0.15);
  cursor: pointer;
}




/* footer */


footer {
  background-color:#272727;
  border-top: 1px solid #333;

}
footer .inner{
  padding: 40px 0 60px 0;
  
}
footer .menu{
 display: flex;
 justify-content: center;
}
footer .menu li{
  position: relative;

}
/* position:absolute; */
footer .menu li::before{
  content:"";
  width:3px;
  height:3px;
  background-color: #555;
  position:absolute;
  top:0;
  bottom:0;
  margin: auto;
}
footer .menu li:first-child::before{
  display: none;
}
/* 인라인 요소이므로 padding을 제대로 쓰려면 display:block을 해줘야한다. */
footer .menu li a{
  color: #ccc;
  font-size:12px;
  font-weight:700;
  padding: 15px;
  display:block;
}
footer .menu li a.green{
  color: #669900;
}
footer .btn-group{
  margin-top: 20px;
  display: flex;
  justify-content: center;
}
footer .btn-group .btn{
  font-size:12px;
  margin-right:10px;
}
footer .btn-group .btn:last-child{
  margin-right:0;
}

footer .info{
  margin-top:30px;
  text-align:center;
}
/* 인라인요소 오른쪽 수평으로 쌓임 display:flex필요없음 */
footer .info span{
  margin-right:20px;
  color:#999;
  font-size:12px;
}
footer .info span:last-child{
  margin-right: 0;
}
footer .copyright{
  color: #999;
  font-size:12px;
  text-align:center;
  margin-top:12px;
}
/* 가로넓이를 입력하지 않아도 자동 가운데 정렬
why? logo라는 태그는 image태그로 브라우저에서는 
display:block인 경우 가로값을 이미 알고있다 */
footer .logo{
  margin: 30px auto 0;
}

